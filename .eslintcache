[{"E:\\Algorithms-Visualizer\\visualSorting\\src\\App.js":"1","E:\\Algorithms-Visualizer\\VisualSorting\\src\\reportWebVitals.js":"2","E:\\Algorithms-Visualizer\\VisualSorting\\src\\App.js":"3","E:\\Algorithms-Visualizer\\VisualSorting\\src\\index.js":"4","E:\\Algorithms-Visualizer\\VisualSorting\\src\\Algorithms\\bubbleSort.js":"5","E:\\Algorithms-Visualizer\\VisualSorting\\src\\Algorithms\\insertionSort.js":"6","E:\\Algorithms-Visualizer\\VisualSorting\\src\\Algorithms\\quicksort.js":"7","E:\\Algorithms-Visualizer\\VisualSorting\\src\\Algorithms\\selectionsort.js":"8","E:\\Algorithms-Visualizer\\VisualSorting\\src\\Components\\Charts\\Charts.jsx":"9","E:\\Algorithms-Visualizer\\VisualSorting\\src\\Components\\Charts\\algo.js":"10"},{"size":528,"mtime":1610342494402,"results":"11","hashOfConfig":"12"},{"size":362,"mtime":1610342494402,"results":"13","hashOfConfig":"14"},{"size":151,"mtime":1614624098398,"results":"15","hashOfConfig":"14"},{"size":500,"mtime":1610342494402,"results":"16","hashOfConfig":"14"},{"size":354,"mtime":1610870076985,"results":"17","hashOfConfig":"14"},{"size":410,"mtime":1610852541622,"results":"18","hashOfConfig":"14"},{"size":1099,"mtime":1610852586289,"results":"19","hashOfConfig":"14"},{"size":498,"mtime":1610851554823,"results":"20","hashOfConfig":"14"},{"size":2916,"mtime":1614581400749,"results":"21","hashOfConfig":"14"},{"size":2925,"mtime":1614580204587,"results":"22","hashOfConfig":"14"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"kge74p",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"iph8qk",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46"},"E:\\Algorithms-Visualizer\\visualSorting\\src\\App.js",[],"E:\\Algorithms-Visualizer\\VisualSorting\\src\\reportWebVitals.js",[],"E:\\Algorithms-Visualizer\\VisualSorting\\src\\App.js",[],"E:\\Algorithms-Visualizer\\VisualSorting\\src\\index.js",[],["47","48"],"E:\\Algorithms-Visualizer\\VisualSorting\\src\\Algorithms\\bubbleSort.js",[],["49","50"],"E:\\Algorithms-Visualizer\\VisualSorting\\src\\Algorithms\\insertionSort.js",[],"E:\\Algorithms-Visualizer\\VisualSorting\\src\\Algorithms\\quicksort.js",[],["51","52"],"E:\\Algorithms-Visualizer\\VisualSorting\\src\\Algorithms\\selectionsort.js",[],"E:\\Algorithms-Visualizer\\VisualSorting\\src\\Components\\Charts\\Charts.jsx",[],"E:\\Algorithms-Visualizer\\VisualSorting\\src\\Components\\Charts\\algo.js",["53"],"const shuffle = arr => {\r\n    var i, j, tmp;\r\n    for (i = arr.length - 1; i > 0; i--) {\r\n        j = Math.floor(Math.random() * (i + 1));\r\n        tmp = arr[i];\r\n        arr[i] = arr[j];\r\n        arr[j] = tmp;\r\n    }\r\n    return arr;\r\n};\r\n\r\nconst sleep = milliseconds => {\r\n    return new Promise(resolve => setTimeout(resolve, milliseconds));\r\n};\r\n\r\n/*\r\n *\r\n * -------- SORTING ALGORITHMS --------\r\n *\r\n */\r\nconst bubbleSort = async reference => {\r\n    let chart = reference.chartInstance;\r\n    const dataArray = chart.data.datasets[0].data;\r\n    const meta = chart.getDatasetMeta(0);\r\n    const colors = chart.data.datasets[0].backgroundColor;\r\n    const defaltColor = 'rgb(255, 99, 132)';\r\n    let tmp;\r\n\r\n    for (let i = 0; i < dataArray.length; i++) {\r\n        for (let j = 0; j < dataArray.length - i - 1; j++) {\r\n            colors[j] = '#991fc4';\r\n            chart.data.datasets[0].backgroundColor = colors;\r\n\r\n            chart.update();\r\n            await sleep(10);\r\n\r\n            if (dataArray[j] > dataArray[j + 1]) {\r\n                tmp = dataArray[j];\r\n                dataArray[j] = dataArray[j + 1];\r\n                dataArray[j + 1] = tmp;\r\n\r\n                tmp = meta.data[j];\r\n                meta.data[j] = meta.data[j + 1];\r\n                meta.data[j + 1] = tmp;\r\n\r\n                colors[j + 1] = '#991fc4';\r\n            }\r\n\r\n            colors[j] = defaltColor;\r\n            chart.data.datasets[0].backgroundColor = colors;\r\n        }\r\n        colors[dataArray.length - i - 1] = '#7cc746';\r\n        chart.data.datasets[0].backgroundColor = colors;\r\n        chart.update();\r\n    }\r\n};\r\n\r\nconst mergeSort = async reference => {\r\n    let chart = reference.chartInstance;\r\n    const dataArray = chart.data.datasets[0].data;\r\n    const meta = chart.getDatasetMeta(0);\r\n    const colors = chart.data.datasets[0].backgroundColor;\r\n    const defaltColor = 'rgb(255, 99, 132)';\r\n    let tmp;\r\n\r\n    for (let i = 0; i < dataArray.length; i++) {\r\n        for (let j = 0; j < dataArray.length - i - 1; j++) {\r\n            colors[j] = '#991fc4';\r\n            chart.data.datasets[0].backgroundColor = colors;\r\n\r\n            chart.update();\r\n            await sleep(10);\r\n\r\n            if (dataArray[j] > dataArray[j + 1]) {\r\n                tmp = dataArray[j];\r\n                dataArray[j] = dataArray[j + 1];\r\n                dataArray[j + 1] = tmp;\r\n\r\n                tmp = meta.data[j];\r\n                meta.data[j] = meta.data[j + 1];\r\n                meta.data[j + 1] = tmp;\r\n\r\n                colors[j + 1] = '#991fc4';\r\n            }\r\n\r\n            colors[j] = defaltColor;\r\n            chart.data.datasets[0].backgroundColor = colors;\r\n        }\r\n        colors[dataArray.length - i - 1] = '#7cc746';\r\n        chart.data.datasets[0].backgroundColor = colors;\r\n        chart.update();\r\n    }\r\n};\r\n\r\nexport default {\r\n    shuffle: shuffle,\r\n    bubbleSort: bubbleSort,\r\n    mergeSort : mergeSort,\r\n};",{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","replacedBy":"57"},{"ruleId":"54","replacedBy":"58"},{"ruleId":"56","replacedBy":"59"},{"ruleId":"54","replacedBy":"60"},{"ruleId":"56","replacedBy":"61"},{"ruleId":"62","severity":1,"message":"63","line":95,"column":1,"nodeType":"64","endLine":99,"endColumn":3},"no-native-reassign",["65"],"no-negated-in-lhs",["66"],["65"],["66"],["65"],["66"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation"]